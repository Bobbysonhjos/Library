@page
@model Library.Pages.Books.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
    <ul>
        <li>Sort by Author</li>
        <li>
            <a asp-page-handler="AuthorSort" asp-route-order="Asc">

                Ascending
            </a>
        </li>
        <li>
            <a asp-page-handler="AuthorSort" asp-route-order="Desc">
                Descending
            </a>
        </li>
    </ul>
    <ul>
        <li>Sort by Genre</li>
        <li>
            <a asp-page-handler="GenreSort" asp-route-order="Asc">

                Ascending
            </a>
        </li>
        <li>
            <a asp-page-handler="GenreSort" asp-route-order="Desc">
                Descending
            </a>
        </li>
    </ul>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Genre)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Book)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
